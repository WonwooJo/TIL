read_excel('data/excel_exam.xlsx')
# python import와 같은 library
library(readxl)
read_excel('data/excel_exam.xlsx')
read_excel('data/excel_exam_novar.xlsx')
read_excel('data/excel_exam_novar.xlsx',col_names = F)
read_excel('data/excel_exam_sheet.xlsx')
read_excel('data/excel_exam_sheet.xlsx',sheet = 3)
read.csv('data/csv_exam.csv')
data <- read.csv('data/csv_exam.csv')
str(data)
write.csv(data,file='savefile.csv')
data <- read.csv('data/csv_exam.csv')
exam <- read.csv('data/csv_exam.csv')
head(exam)
head(exam)
tail(exam)
View(exam)
dim(exam)
dim(exam)[2]
summary(exam)
summary(exam)
install.packages('dplyr')
library(dplyr)
help("dplyr")
exam
rename(exam, eng = english)
reexam <- rename(exam, eng = english)
reexam
reexam$math + reexam$eng
reexam$plus_me <- reexam$math + reexam$eng
reexam$plus_me
# np.where와 거의 유사함.
reexam$result <- ifelse(reexam$math >= 70, 'pass','fail')
reexam$result
reexam
qplot(reexam$result)
library(ggplot2)
qplot(reexam$result)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
qplot(reexam$result)
ifelse(reexam$math<50,'C',ifelse(reexam$math<=80,'B','A'))
reexam
reexam$hakjum <- ifelse(reexam$math<50,'C',ifelse(reexam$math<=80,'B','A'))
reexam
reexam$hakjum <- ifelse(reexam$math<50,'C',
ifelse(reexam$math<=80,'B','A'))
reexam
table(reexam$hakjum) # value_counts와 동일일
exam <- read.csv('csv_exam.csv')
exam <- read.csv('data/csv_exam.csv')
exam
exam %>% # crtl + shift + m
exam %>% filter(class==1)# crtl + shift + m
exam <- read.csv('data/csv_exam.csv')
exam %>% filter(class==1)# crtl + shift + m
exam %>% filter(math>=70 & english >70)
exam %>% filter(math>=70 | english >70)
exam %>% filter(class == 1 | class == 3 | class 5)
exam %>% filter(class %in% c(1,3,5))
exam %>% filter(class == 1 | class == 3 | class 5)
exam %>% filter(class == 1 | class == 3 | class == 5)
exam %>% filter(class %in% c(1,3,5))
exam %>% select(math)
exam %>% select(-math,-class)
exam %>%
filter(class==1)
exam %>%
filter(class==1) %>%
filter(english)
exam %>%
filter(class==1) %>%
filter('english')
exam %>%
filter(class==1) %>%
filter(english)
exam %>%
filter(class==1) %>%
select(english)
exam %>%
filter(id)
exam %>%
select(id)
exam %>%
select(id,math)
exam %>%
select(id,math) %>%
head
# 정렬!!
exam %>%
arrange(math)
exam %>%
arrange(desc(math))
exam %>%
arrange(class, math)
# 파생변수 추가
exam %>%
mutate(total=math+english+science) %>%
head
# 파생변수 추가
exam %>%
mutate(total=math+english+science) %>%
head(total)
# 파생변수 추가
exam %>%
mutate(total=math+english+science) %>%
head()
# 파생변수 추가
exam %>%
mutate(total=math+english+science) %>%
arrange(total)
# 파생변수 추가
exam %>%
mutate(total=math+english+science) %>%
arrange(desc(total))
# 파생변수 추가
exam %>%
mutate(total=math+english+science, mean=total/3) %>%
arrange(desc(total))
exam %>%
mutate(res = ifelse(science>=,'pass','fail')) %>%
head
exam %>%
mutate(res = ifelse(science>=60,'pass','fail')) %>%
head
exam %>%
mutate(res = ifelse(science>=60,'pass','fail')) %>%
arrange((desc(science)))
exam %>%
mutate(res = ifelse(science>=60,'pass','fail')) %>%
arrange((desc(science))) %>%
head
# groupby: 집계
exam %>%
summarise(mean_math = mean(math))
exam %>%
group_by(class)
exam %>%
group_by(class) %>%
# Groups:   class [5] -> 5개의 그룹
summarise(mean_math=mean(math))
exam %>%
group_by(class) %>%
# Groups:   class [5] -> 5개의 그룹
summarise(mean_math=mean(math),
sum_math = sum(math),
median_math = median(math),
n=n())
help("summarise")
n=n() # n: 빈도)
exam %>%
group_by(class) %>%
# Groups:   class [5] -> 5개의 그룹
summarise(mean_math=mean(math),
sum_math = sum(math),
median_math = median(math),
n=n()) # n: 빈도
help(ggplot2)
# 패키지명 :: 데이터셋 (제공데이터셋)
ggplot2::mpg
mpg = as.data.frame(ggplot2::mpg)
mpg
str(mpg)
mpg %>%
filter(displ <=4)
mpga <- mpg %>%
filter(displ <=4)
mpgb <- mpg %>%
filter(displ <=5)
mpga <- mpg %>%
filter(displ <=4)
mpgb <- mpg %>%
filter(displ >4)
mean(mpga$hwy)
b<-data.frame(id=c(3,4),
test=c(30,100))
a<-data.frame(id=c(1,2),
test=c(50,90))
b<-data.frame(id=c(3,4),
test=c(30,100))
bind_rows(a,b)
exam
name<-data.frame(class=c(1,2,3,4,5),
tea=c('kim','park','lee','cho','jung'))
name
# exam과 name 결합 → class 기준으로 합치자
left_join(exam,name,by=class)
# exam과 name 결합 → class 기준으로 합치자
left_join(exam,name,by='class')
library(dplyr)
mpg = as.data.frame(ggplot2::mpg)
mpgb <- mpg %>%
filter(displ >5)
mpga <- mpg %>%
filter(displ <=4)
mpgb <- mpg %>%
filter(displ >5)
mean(mpgb$hwy)
mean(mpgb$hwy)
mean(mpga$hwy)
mean(mpgb$hwy)
# 2. audi와 toyota 중 어떤 회사의 city가 평균적으로 더 높냐?
mpg_audi <- mpg %>%
filter(manufacturer == audi)
# 2. audi와 toyota 중 어떤 회사의 city가 평균적으로 더 높냐?
mpg_audi <- mpg %>%
filter(manufacturer == 'audi')
mpg_toyota <- mpg %>%
filter(manufacturer == 'toyota')
mpg_audi
mean(mpg_audi$cty)
mean(mpg_toyota$cty)
# 3. 'chevrolet','ford','honda' 각 hwy의 평균 및 전체 hwy평균
mpg_che <- mpg %>%
filter(manufacturer == 'chevrolet')
# 3. 'chevrolet','ford','honda' 각 hwy의 평균 및 전체 hwy평균
mpg_chev <- mpg %>%
filter(manufacturer == 'chevrolet')
mpg_ford <- mpg %>%
filter(manufacturer == 'ford')
mpg_honda <- mpg %>%
filter(manufacturer == 'honda')
mean(mpg_chev$hwy)
mean(mpg_ford$hwy)
mean(mpg_honda$hwy)
# 4. mpg$class, cty, 추출해 새로운 데이터프레임을 만들자.
mpg_CC <- mpg$class, mpg$cty
# 4. mpg$class, cty, 추출해 새로운 데이터프레임을 만들자.
mpg_CC <- left_join(mpg$class, mpg$cty)
View(mpg_che)
View(mpg_che)
View(mpg_che)
# 4. mpg$class, cty, 추출해 새로운 데이터프레임을 만들자.
mpg_CC <- mpg %>%
select(class, cty)
mpg_CC
# 5. class가 suv, compact 중 평균 cty가 어떤 것이더 높냐?
mpg_CC_s <- mpg_CC %>%
filter(class == 'suv')
mpg_CC_c <- mpg_CC %>%
filter(class == 'c')
mean(mpg_CC_c$cty)
mpg_CC_c <- mpg_CC %>%
filter(class == 'compact')
mean(mpg_CC_c$cty)
mean(mpg_CC_s$cty)
# 6. audi 중 hwy 1~5위 자동차 데이터
mpg
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
filter(model)
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model)
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %%
summarise(mean_hwy = mean(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %%
summarise(mean(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model)
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model)$$
arrange(desc(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
arrange()
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
arrange()
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
arrange(desc(mean(hwy)))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
arrange((desc(hwy)))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
arrange(desc(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy)) %>%
arrange(desc(mean(hwy)))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
mpg_model_hwy <- summarise(mean(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
mpg_model_hwy <- summarise(mean(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean <- mean(hwy))
mean
mpg$mean
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean <- mean(hwy))
# 6. audi 중 어떤 모델이 hwy 1~5위냐?
mpg %>%
group_by(model) %>%
summarise(mean(hwy))
